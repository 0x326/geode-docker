---
title:  Why Use Geode with Hibernate?
---

<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

Using Apache Geode with Hibernate improves performance and scalability, gives you flexible caching options, and more.

-   **General**

    -   Geode's L2 cache solution improves Hibernate performance
    -   Reduces traffic to your database server
    -   Simple to configure: requires just a few changes to `hibernate.cfg.xml`
    -   Flexible caching options, supporting several local and distributed configurations
    -   Access to many of the Geode features
-   **Performance**

    -   Mesh-like architecture provides single hop access to any entity
    -   Designed to minimize serialization costs
-   **Scalability**

    -   Data can be partitioned across the entire cluster
    -   Smart heap utilization / smart eviction algorithm
    -   Supports all Hibernate concurrency strategies (read only, read/write, non-strict read/write, transactional)
    -   Ensures data consistency without expensive distributed locks
    -   Overflow to disk on each system member for a shared-nothing persistence
    -   Supports tiered caching


