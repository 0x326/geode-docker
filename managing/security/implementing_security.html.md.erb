---
title:  Security Implementation Overview
---

Apache Geode can authenticate system members, clients, and other system
entities. It can also individually authorize cache operations 
for those various entities.

<a id="implementing_security__section_79F6CF928E764CA294D466D0CB2E5FAC"></a>
An overview of How it all Works
The security of a distributed system can be greatly enhanced by
authenticating all system participants.
This verifies the identity of the participants,
gaining control over participation.
The variety of participants include peer members, cache servers,
clients, originators of JMX operations, Pulse,
gateway receivers representing WAN members of the system,
and commands arriving from `gfsh` on behalf of system users
or administrators.

Given authentication,
isolation and access to cache data and system state can be further
protected by implementing a authorization mechanism.
For example, only certain system administrators might be permitted
to start and stop servers. 
The authority to do this needs to be limited to specific
verified accounts, preventing those without the authorization. 
An implementation of an authorization mechanism requires
that authenticated identities accompany all requests to the system,
and that the system maintains a representation of which identities
are permitted to complete which actions or cache commands.

## Authentication and Authorization

A single interface specifies authentication and a role-based access
control for authorizing cache operations.

Configuration in the form of property identifies the implementation
of the interface.
Defining the property enables the authentication/authorization defined
in the implementation.

A second property lists which components the implementation applies to.
Therefore, it is configurable which components get authenticated and
go through an authorization step prior to doing operations.

## Access Control for Authorization

The `ResourcePermission` object classifies operations.
The two main parts of the object are the `Resource` and the `Operation`.
The `Resource` identifies a role of a component within the
distributed system.
There are two roles:

- `CLUSTER` is an administrative role. 
- `DATA` is a role that does operations on regions. 

The `Operation` qualifies what is to be accomplished.
There are three values:

- `READ` looks at data; it does not modify anything. 
- `WRITE` modifies data. `WRITE` does not imply `READ`.
- `MANAGE` accesses admininistrative information. `MANAGE` does not imply `WRITE`.

Data read and write operations may be further applied to regions
and specific keys within regions.
