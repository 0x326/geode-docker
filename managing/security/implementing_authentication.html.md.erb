---
title:  Implementing Authentication
---

Authentication lends a measure of security to a distributed system
by verifying the identity of components as they connect to the system.
All components use the same authentication mechanism.

## How Authentication Works

When a component initiates a connection to the distributed system,
the `SecurityManager.authenticate` method is invoked.
The component provides credentials in the form of `Properties`,
which are passed to the `authenticate` method.
The `authenticate` method is expected to either return an object
representing a principal or throw an `AuthenticationFailedException`.


## Implement SecurityManager Interface

Complete these items to implement authentication.

- Decide upon an authentication algorithm.
The [Authentication Example](authentication_examples.html)
stores a set of user name and
password pairs that represent the identities of components
that will connect to the system.
This simplistic algorithm returns the user name as a principal
if the user name and password passed to the `authenticate` method
are a match for one of the stored pairs.
- Define the `security-manager` and `security-enabled-components` properties.
See [Enable Security with Property Definitions](enable_security.html)
for details about these properties.
- Implement the  `authenticate` method of the `SecurityManager` interface.
- Define any extra resources that the implemented authentication algorithm
needs in order to make a decision.
